<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LillleHoury</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://github/17307/"/>
  <updated>2018-06-06T15:03:02.000Z</updated>
  <id>http://github/17307/</id>
  
  <author>
    <name>LillleHoury</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://github/17307/2018/06/07/hello-world/"/>
    <id>http://github/17307/2018/06/07/hello-world/</id>
    <published>2018-06-07T12:44:54.950Z</published>
    <updated>2018-06-06T15:03:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>p</title>
    <link href="http://github/17307/2018/06/07/p/"/>
    <id>http://github/17307/2018/06/07/p/</id>
    <published>2018-06-07T11:29:14.000Z</published>
    <updated>2018-06-07T11:30:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>123</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;123&lt;/p&gt;

      
    
    </summary>
    
      <category term="python" scheme="http://github/17307/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>决策树</title>
    <link href="http://github/17307/2018/06/07/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <id>http://github/17307/2018/06/07/决策树/</id>
    <published>2018-06-06T16:38:16.000Z</published>
    <updated>2018-06-07T03:14:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>决策树(包括ID3,C4.5)以及sk-learn基础使用<br><a id="more"></a></p><h1 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h1><h2 id="决策树ID3算法的信息论基础"><a href="#决策树ID3算法的信息论基础" class="headerlink" title="决策树ID3算法的信息论基础"></a>决策树ID3算法的信息论基础</h2><ul><li><p>熵度量了事物的不确定性，越不确定的事物，它的熵就越大。具体的，随机变量X的熵的表达式如下：  </p><p>$$info(X)=H(X)=\sum_{i=1}^{n}{p_i}log_{2}{p_i}$$</p></li></ul><ul><li><h2 id="决策树构建"><a href="#决策树构建" class="headerlink" title="决策树构建"></a>决策树构建</h2><ul><li><h3 id="ID3"><a href="#ID3" class="headerlink" title="ID3"></a>ID3</h3></li><li><h3 id="C4-5"><a href="#C4-5" class="headerlink" title="C4.5"></a>C4.5</h3></li></ul></li></ul><p><img src="/img/post/ml/decisiontree/decissiontree3.jpg"><br><img src="/img/post/ml/decisiontree/decissiontree4.jpg"></p><h1 id="sk-learn"><a href="#sk-learn" class="headerlink" title="sk-learn"></a>sk-learn</h1><p>来自<code>http://sklearn.apachecn.org/cn/latest/modules/tree.html#tree-multioutput</code></p><h2 id="二分类问题"><a href="#二分类问题" class="headerlink" title="二分类问题"></a>二分类问题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris  <span class="comment"># iris数据</span></span><br><span class="line"><span class="keyword">import</span> graphviz  <span class="comment"># 用于导出决策树</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span><span class="params">()</span>:</span></span><br><span class="line">    X = [[<span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>]]</span><br><span class="line">    Y = [<span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">    clf = tree.DecisionTreeClassifier()</span><br><span class="line"></span><br><span class="line">    clf = clf.fit(X, Y)</span><br><span class="line">    <span class="comment"># 预测数据值</span></span><br><span class="line">    print(clf.predict([[<span class="number">2.</span>, <span class="number">2.</span>]]))</span><br><span class="line">    <span class="comment"># 预测数据值的概率,与类别一一对应</span></span><br><span class="line">    print(clf.predict_proba([[<span class="number">2.</span>, <span class="number">2.</span>]]))</span><br></pre></td></tr></table></figure><h2 id="多分类与展示"><a href="#多分类与展示" class="headerlink" title="多分类与展示"></a>多分类与展示</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span><span class="params">()</span>:</span></span><br><span class="line">    iris = load_iris()</span><br><span class="line">    clf = tree.DecisionTreeClassifier()</span><br><span class="line">    clf = clf.fit(iris.data, iris.target)</span><br><span class="line">    dot_data = tree.export_graphviz(clf, out_file=<span class="keyword">None</span>)  <span class="comment"># 数字形式的树</span></span><br><span class="line">    graph = graphviz.Source(dot_data)  <span class="comment"># 图形化树</span></span><br><span class="line">    graph.render(<span class="string">"img/iris"</span>)  <span class="comment"># 生成iris.pdf</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :func: export_graphviz</span></span><br><span class="line"><span class="string">    出导出还支持各种美化，包括通过他们的类着色节点（或回归值），如果需要，使用显式变量和类名。Jupyter</span></span><br><span class="line"><span class="string">    notebook也可以自动找出相同的模块::</span></span><br><span class="line"><span class="string">    dot_data = tree.export_graphviz(clf, out_file=None, # doctest: +SKIP</span></span><br><span class="line"><span class="string">                            feature_names=iris.feature_names,  # doctest: +SKIP</span></span><br><span class="line"><span class="string">                            class_names=iris.target_names,  # doctest: +SKIP</span></span><br><span class="line"><span class="string">                            filled=True, rounded=True,  # doctest: +SKIP</span></span><br><span class="line"><span class="string">                            special_characters=True)  # doctest: +SKIP</span></span><br><span class="line"><span class="string">    """</span></span><br></pre></td></tr></table></figure><h2 id="回归问题"><a href="#回归问题" class="headerlink" title="回归问题"></a>回归问题</h2><p>sk-learn 可以用来解决决策树回归算法。<br>决策树通过使用 DecisionTreeRegressor 类也可以用来解决回归问题。</p><h2 id="多值输出"><a href="#多值输出" class="headerlink" title="多值输出"></a>多值输出</h2><p>该模块通过在 <code>DecisionTreeClassifier</code> 和 :class:<code>DecisionTreeRegressor</code> 中实现该策略来支持多输出问题。</p><h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><ul><li>对于拥有大量特征的数据决策树会出现过拟合的现象。获得一个合适的样本比例和特征数量十分重要，因为在高维空间中只有少量的样本的树是十分容易过拟合的。</li><li>考虑事先进行降维 <code>PCA</code> , <code>ICA</code> ，使树更好地找到具有分辨性的特征。</li><li>通过 <code>export</code> 功能可以可视化您的决策树。使用 <code>max_depth=3</code> 作为初始树深度，让决策树知道如何适应数据，然后再增加树的深度。</li><li>填充树的样本数量会增加树的每个附加级别。使用 <code>max_depth</code> 来控制输的大小防止过拟合</li><li>通过使用 <code>min_samples_split</code> 和 <code>min_samples_leaf</code> 来控制叶节点上的样本数量。当这个值很小时意味着生成的决策树将会过拟合，然而当这个值很大时将会不利于决策树的对样本的学习。所以尝试 <code>min_samples_leaf=5</code> 作为初始值。如果样本的变化量很大，可以使用浮点数作为这两个参数中的百分比。两者之间的主要区别在于 <code>min_samples_leaf</code> 保证叶结点中最少的采样数，而 <code>min_samples_split</code> 可以创建任意小的叶子，尽管在文献中 <code>min_samples_split</code> 更常见</li><li>在训练之前平衡您的数据集，以防止决策树偏向于主导类.可以通过从每个类中抽取相等数量的样本来进行类平衡，或者优选地通过将每个类的样本权重 (<code>sample_weight</code>) 的和归一化为相同的值。还要注意的是，基于权重的预修剪标准 (<code>min_weight_fraction_leaf</code>) 对于显性类别的偏倚偏小，而不是不了解样本权重的标准，如 <code>min_samples_leaf</code> 。</li><li>如果样本被加权，则使用基于权重的预修剪标准 <code>min_weight_fraction_leaf</code> 来优化树结构将更容易，这确保叶节点包含样本权重的总和的至少一部分。</li><li>所有的决策树内部使用 <code>np.float32</code> 数组 ，如果训练数据不是这种格式，将会复制数据集</li><li>如果输入的矩阵X为稀疏矩阵，建议您在调用<code>fit</code>之前将矩阵X转换为稀疏的<code>csc_matrix</code> ,在调用<code>predict</code>之前将 <code>csr_matrix</code> 稀疏。当特征在大多数样本中具有零值时，与密集矩阵相比，稀疏矩阵输入的训练时间可以快几个数量级</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;决策树(包括ID3,C4.5)以及sk-learn基础使用&lt;br&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="http://github/17307/categories/Machine-Learning/"/>
    
    
  </entry>
  
</feed>
